---
import { useTranslations } from '../utils/i18n';
import { ChevronRight } from '@lucide/astro';

interface BreadcrumbItem {
  label: string;
  href?: string;
}

interface Props {
  lang: string;
  items: BreadcrumbItem[];
}

const { lang, items } = Astro.props;

const translations = {
  en: {
    home: 'Home',
    blog: 'Blog',
  },
  de: {
    home: 'Startseite',
    blog: 'Blog',
  },
};

const $t = useTranslations(translations, lang);

// Ensure we always have home as the first item
const homeItem = { label: $t('home'), href: lang === 'de' ? '/de' : '/' };
const breadcrumbItems = [homeItem, ...items];
---

<nav aria-label="Breadcrumb" class="mb-6">
  <ol class="flex flex-wrap items-center gap-2 text-sm">
    {breadcrumbItems.map((item, index) => (
      <li class="flex items-center gap-2">
        {item.href ? (
          <a href={item.href} class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors">
            {item.label}
          </a>
        ) : (
          <span class="text-gray-900 dark:text-white font-medium" aria-current="page">
            {item.label}
          </span>
        )}
        {index < breadcrumbItems.length - 1 && (
          <ChevronRight class="w-4 h-4 text-gray-400 dark:text-gray-500" aria-hidden="true" />
        )}
      </li>
    ))}
  </ol>
</nav>