---
interface Props {
  type: 'organization' | 'article' | 'product' | 'breadcrumb' | 'faq' | 'local-business';
  data?: any;
  url?: string;
  title?: string;
  description?: string;
  image?: string;
  author?: string;
  datePublished?: string;
  dateModified?: string;
}

const {
  type,
  data,
  url = Astro.site?.toString() || 'https://example.com',
  title,
  description,
  image,
  author,
  datePublished,
  dateModified
} = Astro.props;

// Base organization data
const organizationData = {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": "Your SaaS Platform",
  "url": url,
  "logo": `${url}/images/logo.png`,
  "description": "Revolutionary SaaS platform for modern businesses",
  "foundingDate": "2023",
  "address": {
    "@type": "PostalAddress",
    "streetAddress": "123 Innovation Drive",
    "addressLocality": "San Francisco",
    "addressRegion": "CA",
    "postalCode": "94107",
    "addressCountry": "US"
  },
  "contactPoint": {
    "@type": "ContactPoint",
    "telephone": "+1-555-123-4567",
    "contactType": "customer service",
    "email": "support@example.com",
    "availableLanguage": ["English", "German"]
  },
  "sameAs": [
    "https://twitter.com/yourcompany",
    "https://linkedin.com/company/yourcompany",
    "https://github.com/yourcompany"
  ],
  "founder": {
    "@type": "Person",
    "name": "Company Founder"
  }
};

const generateStructuredData = () => {
  switch (type) {
    case 'organization':
      return organizationData;

    case 'article':
      return {
        "@context": "https://schema.org",
        "@type": "Article",
        "headline": title,
        "description": description,
        "url": url,
        "datePublished": datePublished,
        "dateModified": dateModified || datePublished,
        "author": {
          "@type": author?.includes('@') ? "Organization" : "Person",
          "name": author || "Your SaaS Platform"
        },
        "publisher": organizationData,
        "image": image ? {
          "@type": "ImageObject",
          "url": image,
          "width": 1200,
          "height": 630
        } : undefined,
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": url
        }
      };

    case 'product':
      return {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": title || "Your SaaS Platform",
        "description": description,
        "url": url,
        "applicationCategory": "BusinessApplication",
        "operatingSystem": "Web-based",
        "offers": {
          "@type": "Offer",
          "priceCurrency": "USD",
          "price": "0",
          "priceValidUntil": "2025-12-31",
          "availability": "https://schema.org/InStock",
          "seller": organizationData
        },
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": "4.8",
          "ratingCount": "150",
          "bestRating": "5",
          "worstRating": "1"
        },
        "provider": organizationData,
        "screenshot": image
      };

    case 'breadcrumb':
      return {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": data?.map((item: any, index: number) => ({
          "@type": "ListItem",
          "position": index + 1,
          "name": item.name,
          "item": item.url
        })) || []
      };

    case 'faq':
      return {
        "@context": "https://schema.org",
        "@type": "FAQPage",
        "mainEntity": data?.map((faq: any) => ({
          "@type": "Question",
          "name": faq.question,
          "acceptedAnswer": {
            "@type": "Answer",
            "text": faq.answer
          }
        })) || []
      };

    case 'local-business':
      return {
        "@context": "https://schema.org",
        "@type": "LocalBusiness",
        ...organizationData,
        "priceRange": "$$",
        "openingHours": [
          "Mo-Fr 09:00-18:00"
        ],
        "hasMap": "https://maps.google.com/?q=123+Innovation+Drive,+San+Francisco,+CA",
        "geo": {
          "@type": "GeoCoordinates",
          "latitude": "37.7749",
          "longitude": "-122.4194"
        }
      };

    default:
      return organizationData;
  }
};

const structuredData = generateStructuredData();
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

<!-- Additional meta tags for enhanced SEO -->
{type === 'article' && (
  <>
    <meta property="article:published_time" content={datePublished} />
    {dateModified && <meta property="article:modified_time" content={dateModified} />}
    {author && <meta property="article:author" content={author} />}
  </>
)}

{type === 'product' && (
  <>
    <meta property="product:price:amount" content="0" />
    <meta property="product:price:currency" content="USD" />
  </>
)}

<!-- Twitter Card specific for articles -->
{type === 'article' && (
  <>
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@yourcompany" />
    <meta name="twitter:creator" content="@yourcompany" />
  </>
)}

<!-- Open Graph enhanced data -->
{image && (
  <>
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={title || "Your SaaS Platform"} />
  </>
)}