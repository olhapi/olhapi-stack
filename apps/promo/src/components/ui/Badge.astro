---
interface Props {
  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  href?: string;
  target?: string;
}

const {
  variant = 'default',
  size = 'md',
  class: className = '',
  href,
  target
} = Astro.props;

const Component = href ? 'a' : 'span';

const baseClasses = 'badge';
const variantClasses = {
  default: 'badge-default',
  primary: 'badge-primary',
  secondary: 'badge-secondary',
  success: 'badge-success',
  warning: 'badge-warning',
  error: 'badge-error'
};

const sizeClasses = {
  sm: 'badge-sm',
  md: 'badge-md',
  lg: 'badge-lg'
};

const classes = [
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  href && 'badge-link',
  className
].filter(Boolean).join(' ');
---

<Component
  class={classes}
  href={href}
  target={target}
>
  <slot />
</Component>

<style>
  /* Base Badge Styles */
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
    font-family: inherit;
    border-radius: var(--radius-full);
    white-space: nowrap;
    transition: all var(--duration-fast) var(--ease-out);
    text-decoration: none;
    border: 1px solid transparent;
  }

  /* Size Variants */
  .badge-sm {
    padding: var(--space-1) var(--space-2);
    font-size: 11px;
    line-height: 1.2;
  }

  .badge-md {
    padding: var(--space-1) var(--space-3);
    font-size: 12px;
    line-height: 1.3;
  }

  .badge-lg {
    padding: var(--space-2) var(--space-4);
    font-size: 14px;
    line-height: 1.4;
  }

  /* Color Variants */
  .badge-default {
    background: var(--color-background-tertiary);
    color: var(--color-text-secondary);
    border-color: var(--color-border);
  }

  .badge-primary {
    background: var(--color-primary-blue);
    color: white;
  }

  .badge-secondary {
    background: var(--color-background-secondary);
    color: var(--color-text-primary);
    border-color: var(--color-border);
  }

  .badge-success {
    background: var(--color-accent-green);
    color: white;
  }

  .badge-warning {
    background: var(--color-accent-orange);
    color: var(--color-text-primary);
  }

  .badge-error {
    background: var(--color-accent-red);
    color: white;
  }

  /* Link States */
  .badge-link {
    cursor: pointer;
  }

  .badge-link:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
  }

  .badge-link.badge-default:hover {
    background: var(--color-background-secondary);
    border-color: var(--color-primary-blue);
  }

  .badge-link.badge-primary:hover {
    background: var(--color-primary-hover);
  }

  .badge-link.badge-secondary:hover {
    background: var(--color-background-tertiary);
  }

  .badge-link.badge-success:hover {
    background: #16a34a;
  }

  .badge-link.badge-warning:hover {
    background: #ea580c;
  }

  .badge-link.badge-error:hover {
    background: #dc2626;
  }

  /* Dark Mode Adjustments */
  [data-theme="dark"] .badge-default {
    background: var(--color-background-secondary);
    color: var(--color-text-secondary);
  }

  [data-theme="dark"] .badge-secondary {
    background: var(--color-background-tertiary);
  }

  [data-theme="dark"] .badge-warning {
    color: var(--color-background-primary);
  }

  /* Focus States */
  .badge-link:focus-visible {
    outline: 2px solid var(--color-primary-blue);
    outline-offset: 2px;
  }

  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .badge {
      transition: none;
    }

    .badge-link:hover {
      transform: none;
    }
  }

  /* Accessibility */
  @media (prefers-contrast: high) {
    .badge {
      border-width: 2px;
    }
  }
</style>