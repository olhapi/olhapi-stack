services:
  postgres:
    image: postgres:16-alpine
    container_name: olhapi-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-olhapi_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - olhapi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: olhapi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - olhapi-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: olhapi-api
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-olhapi_db}
      REDIS_URL: redis://redis:6379
      CLIENT_ORIGIN: ${CLIENT_ORIGIN:-http://localhost:3000}
      PORT: ${PORT:-3001}
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    networks:
      - olhapi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

networks:
  olhapi-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
